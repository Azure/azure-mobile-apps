parameters:
  buildConfiguration: 'Release'
  buildArtifactDirectory: 'output-build'
  nugetArtifactDirectory: 'output-nuget'
  testArtifactDirectory: 'output-test'
  sourceDirectory: './src'
  testDirectory: './test'
  
steps:
  - pwsh: |
      "Current Location:" | Write-Host
      Get-Location

      "\nSource Build Directories:" | Write-Host
      Get-ChildItem -Path '${{ parameters.sourceDirectory }}' -Directory -Recurse 
        | Where-Object { $_.FullName -match '\\(bin|obj)\\${{ parameters.buildConfiguration }}$' } 
        | Write-Host

      "\nTest Build Directories:" | Write-Host
      Get-ChildItem -Path '${{ parameters.testDirectory }}' -Directory -Recurse 
        | Where-Object { $_.FullName -match '\\(bin|obj)\\${{ parameters.buildConfiguration }}$' } 
        | Write-Host
    displayName: Show Build Directories

  - pwsh: |
      New-Item -Force -Path '${{ parameters.buildArtifactDirectory }}' -ItemType Directory
      New-Item -Force -Path '${{ parameters.nugetArtifactDirectory }}' -ItemType Directory
      New-Item -Force -Path '${{ parameters.testArtifactDirectory }}' -Itemtype Directory

      $directories = Get-ChildItem -Path '${{ parameters.sourceDirectory }}' -Directory -Recurse 
        | Where-Object { $_.FullName -match "\\bin\\${{ parameters.buildConfiguration }}$" }
      $directories | Foreach-Object {
        Write-Host "Directory: $_"
        $directory = $_
        Get-ChildItem -Path $directory -Filter '*Datasync*' -File -Recurse | Foreach-Object {
          $base = [IO.Path]::GetRelativePath($directory, $_.FullName)
          $dest = "${{ parameters.buildArtifactDirectory }}\$base"
          $destdir = [IO.Path]::GetDirectoryName($dest)
          New-Item -Path $destdir -ItemType Directory -Force
          Copy-Item -Verbose -Path $_.FullName -Destination $dest
        }
      }

      $directories = Get-ChildItem -Path '${{ parameters.testDirectory }}' -Directory -Recurse 
        | Where-Object { $_.FullName -match "\\bin\\${{ parameters.buildConfiguration }}$" }
      $directories | Foreach-Object {
        Write-Host "Directory: $_"
        $directory = $_
        Get-ChildItem -Path $directory -Filter '*Datasync*' -File -Recurse | Foreach-Object {
          $base = [IO.Path]::GetRelativePath($directory, $_.FullName)
          $dest = "${{ parameters.buildArtifactDirectory }}\$base"
          $destdir = [IO.Path]::GetDirectoryName($dest)
          New-Item -Path $destdir -ItemType Directory -Force
          Copy-Item -Verbose -Path $_.FullName -Destination $dest
        }
      }

      $directories = Get-ChildItem -Path '${{ parameters.sourceDirectory }}' -Directory -Recurse 
        | Where-Object { $_.FullName -match "\\(bin|obj)\\${{ parameters.buildConfiguration }}$" }
      $directories | Foreach-Object {
        $directory = $_
        Get-ChildItem -Path $directory -Include @( "*.nupkg", "*.nuspec" ) -File -Recurse | %{
          Write-Host "Copy-Item -Path $_ -Destination ${{ parameters.nugetArtifactDirectory }}"
          Copy-Item -Verbose -Path $_ -Destination '${{ parameters.nugetArtifactDirectory }}'
        }
      }
    displayName: Create Artifacts Storage

  - task: PublishBuildArtifacts@1
    displayName: Publish Build Artifacts
    inputs:
      pathToPublish: '${{ parameters.buildArtifactDirectory }}'
      artifactName: build

  - task: PublishBuildArtifacts@1
    displayName: Publish Test Artifacts
    inputs:
      pathToPublish: '${{ parameters.testArtifactDirectory }}'
      artifactName: test

  - task: PublishBuildArtifacts@1
    displayName: Publish NuGet Packages
    inputs:
      PathtoPublish: ${{ parameters.nugetArtifactDirectory }}
      artifactName: nuget