//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.Mobile.Server.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class RResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Azure.Mobile.Server.Properties.RResources", typeof(RResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to ApplyTo cannot be called multiple times on the same HttpConfiguration instance..
        /// </summary>
        internal static string ApplyTo_CalledTwice {
            get {
                return ResourceManager.GetString("ApplyTo_CalledTwice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; caused an error: {1}..
        /// </summary>
        internal static string CachePolicy_BadProvider {
            get {
                return ResourceManager.GetString("CachePolicy_BadProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A provider of type {0} has already been registered..
        /// </summary>
        internal static string ExtensionProvider_AlreadyExists {
            get {
                return ResourceManager.GetString("ExtensionProvider_AlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The request is invalid as submitted..
        /// </summary>
        internal static string HttpBadRequest {
            get {
                return ResourceManager.GetString("HttpBadRequest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No HTTP resource was found that matches the request URI &apos;{0}&apos;..
        /// </summary>
        internal static string HttpNotFound {
            get {
                return ResourceManager.GetString("HttpNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Authorization has been denied for this request..
        /// </summary>
        internal static string HttpUnauthorized {
            get {
                return ResourceManager.GetString("HttpUnauthorized", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No service setting was found with key &apos;{0}&apos;. Please ensure that your service is initialized with the correct application settings and connection strings..
        /// </summary>
        internal static string Settings_KeyNotFound {
            get {
                return ResourceManager.GetString("Settings_KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No API version was specified in the request, this request needs to specify a ZUMO-API-VERSION of &apos;{0}&apos;.  For more information and supported clients see: {1}.
        /// </summary>
        internal static string Version_Required {
            get {
                return ResourceManager.GetString("Version_Required", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid API version was specified in the request, this request needs to specify a ZUMO-API-VERSION of &apos;{0}&apos;.  For more information and supported clients see: {1}.
        /// </summary>
        internal static string Version_Unsupported {
            get {
                return ResourceManager.GetString("Version_Unsupported", resourceCulture);
            }
        }
    }
}
