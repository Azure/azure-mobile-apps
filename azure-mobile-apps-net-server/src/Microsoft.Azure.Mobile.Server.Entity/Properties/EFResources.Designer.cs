//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Azure.Mobile.Server.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class EFResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal EFResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Azure.Mobile.Server.Properties.EFResources", typeof(EFResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed due to a change conflict. Error received: &apos;{0}&apos;..
        /// </summary>
        internal static string DomainManager_ChangeConflict {
            get {
                return ResourceManager.GetString("DomainManager_ChangeConflict", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The operation failed with the following error: &apos;{0}&apos;..
        /// </summary>
        internal static string DomainManager_InvalidOperation {
            get {
                return ResourceManager.GetString("DomainManager_InvalidOperation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The client is attempting to use optimistic concurrency in connection with updates and inserts but the current &apos;{0}&apos; implementation does not set the original version required to support this. Please implement the method &apos;{1}&apos; and provide the original value..
        /// </summary>
        internal static string DomainManager_NoOriginalValue {
            get {
                return ResourceManager.GetString("DomainManager_NoOriginalValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The entity submitted was invalid: {0}.
        /// </summary>
        internal static string DomainManager_ValidationError {
            get {
                return ResourceManager.GetString("DomainManager_ValidationError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation error on property &apos;{0}&apos;: {1}.
        /// </summary>
        internal static string DomainManager_ValidationErrorDescription {
            get {
                return ResourceManager.GetString("DomainManager_ValidationErrorDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to They key &apos;{0}&apos; is invalid. It must follow a format that is compatible with a type &apos;{1}&apos;..
        /// </summary>
        internal static string EntityDomainController_KeyNotFound {
            get {
                return ResourceManager.GetString("EntityDomainController_KeyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The &apos;{0}&apos; field in the HTTP request body must match the values used in the request URI. Expected a value of &apos;{1}&apos; but received &apos;{2}&apos;..
        /// </summary>
        internal static string TableController_KeyMismatch {
            get {
                return ResourceManager.GetString("TableController_KeyMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key &apos;{0}&apos; is invalid. It must follow the pattern &apos;k1&apos;,&apos;k2&apos;,&apos;k3&apos;..
        /// </summary>
        internal static string TableKeys_InvalidKey {
            get {
                return ResourceManager.GetString("TableKeys_InvalidKey", resourceCulture);
            }
        }
    }
}
